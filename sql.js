//  TO SEE THE DATABASE
 SHOW DATABASES;

//  TO CREATE A DATABASE
 CREATE DATABASE ;

 //  USE _DBname_;
 USE A;

//  TO SEE THE TABLES
 SHOW TABLES;

 //  TO CREATE A TABLE HEADING
CREATE TABLE newOne (name VARCHAR(100),
age INT,
rollNo INT);

//  TO SEE THE TABLES HEADING
 DESCRIBE newOne;

//  TO CREATE A TABLE FIELDS
INSERT INTO newOne(name,age,rollNo)
VALUES
('amal', 21, 01),
('gokul', 22, 02),
('subin', 22, 03);

//  TO CREATE A TABLE DATA
SELECT * FROM newOne;

// TO ADD A NEW COLUMN
ALTER TABLE newOne
ADD COLUMN city VARCHAR(50);

// TO UPDATE THE FIELD VALUE
UPDATE newOne SET city = 'tvm' WHERE rollNo  =1;

// TO UPDATE THE FRAME
ALTER TABLE newONE
DROP COLUMN city;

// VIEW DECENDING ORDER
SELECT * FROM newOne ORDER BY rollNo DESC;

// VIEW LAST 
SELECT * FROM newOne ORDER BY rollNo DESC LIMIT 1;

// VIEW FIRST
SELECT * FROM newOne ORDER BY rollNo ASC LIMIT 1;

// TO GET THE DATA WHICH STARTS THE LETTER WITH "a"
SELECT * FROM newOne WHERE name LIKE 'a%';

// TO GET THE DATA WHICH ENDS THE LETTER WITH "a"
SELECT * FROM newOne WHERE name LIKE '%a';

// TO GET THE DATA EXPECT WHICH STARTS THE LETTER WITH "a"
SELECT * FROM newOne WHERE name NOT LIKE 'a%';

// TO ADD
SELECT CONCAT (name,' ' , age) AS newField FROM newOne;

// MAXIMUN
SELECT MAX(age) AS newField FROM newOne;

// MINIMUM
SELECT MIN(age) AS newField FROM newOne;

// TO ADD TWO TABLES
SELECT * FROM employ INNER JOIN department ON department.ID = employ.ID;

// TO GET THE SECOND LARGEST VALUE
mysql> SELECT MAX(SALARY) FROM employ WHERE SALARY < (SELECT MAX(SALARY) FROM employ);

// TO FIND AVG AND SHOW VALUES WHICH IS GREATER THAN AVG
mysql> SELECT * FROM employ WHERE SALARY > (SELECT AVG(SALARY) FROM employ);